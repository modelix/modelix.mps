<project name="de.q60.mps.web.build.scripts" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/de.q60.mps.web.build.scripts" />
  <property name="build.layout" location="${build.dir}/artifacts/de.q60.mps.web.build.scripts" />
  <property name="mps.home" location="" />
  <property name="artifacts.root" location="${basedir}/../artifacts" />
  <property name="extensions.artifacts" location="${artifacts.root}/de.itemis.mps.extensions" />
  <property name="artifacts.mps" location="${mps.home}" />
  <property name="artifacts.de.itemis.mps.extensions" location="${extensions.artifacts}" />
  <property name="artifacts.de.itemis.mps.extensions.allScripts" location="${extensions.artifacts}" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property file="${artifacts.de.itemis.mps.extensions}/build.properties" prefix="import.de.itemis.mps.extensions" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mps.mps.build.counter" value="${import.mps.mps.mps.build.counter}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  <property name="de.itemis.mps.extensions.versionNumber" value="${import.de.itemis.mps.extensions.de.itemis.mps.extensions.versionNumber}" />
  <property name="environment" value="env" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  <property name="mps.generator.skipUnmodifiedModels" value="false" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.mps}/lib/ant/lib/ant-mps.jar" />
    <pathelement location="${artifacts.mps}/lib/jdom.jar" />
    <pathelement location="${artifacts.mps}/lib/log4j.jar" />
  </path>
  
  <target name="assemble" depends="classes, declare-mps-tasks">
    <mkdir dir="${build.layout}" />
    <mkdir dir="${build.tmp}/default/de.q60.mps.web.zip" />
    <mkdir dir="${build.tmp}/default/de.q60.mps.web.zip/de.q60.mps.web" />
    <mkdir dir="${build.tmp}/default/de.q60.mps.web.zip/de.q60.mps.web/META-INF" />
    <echoxml file="${build.tmp}/default/de.q60.mps.web.zip/de.q60.mps.web/META-INF/plugin.xml">
      <idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
        <id>de.q60.mps.web</id>
        <name>de.q60.mps.web</name>
        <version>1.0</version>
        <depends>jetbrains.mps.core</depends>
        <depends>jetbrains.mps.build</depends>
        <depends>de.slisson.mps.all</depends>
        
        <extensions defaultExtensionNs="com.intellij">
          <mps.LanguageLibrary dir="/languages" />
        </extensions>
      </idea-plugin>
    </echoxml>
    <mkdir dir="${build.tmp}/default/de.q60.mps.web.zip/de.q60.mps.web/languages" />
    <mkdir dir="${build.tmp}/default/de.q60.mps.web.zip/de.q60.mps.web/languages/de.q60.mps.web" />
    <mkdir dir="${build.tmp}/default/de.q60.mps.web.build.jar" />
    <mkdir dir="${build.tmp}/default/de.q60.mps.web.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/de.q60.mps.web.build.jar/META-INF/module.xml">
      <module namespace="de.q60.mps.web.build" type="solution" uuid="79531264-5c70-4f13-ad1b-5c32ef78c6f6">
        <dependencies />
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="de.q60.mps.web.build-src.jar" descriptor="de.q60.mps.web.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/de.q60.mps.web.zip/de.q60.mps.web/languages/de.q60.mps.web/de.q60.mps.web.build.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/de.q60.mps.web.build" />
      <fileset dir="${basedir}/de.q60.mps.web.build/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/de.q60.mps.web.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/de.q60.mps.web.build-models">
      <fileset dir="${basedir}/de.q60.mps.web.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/de.q60.mps.web.zip/de.q60.mps.web/languages/de.q60.mps.web/de.q60.mps.web.build-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/de.q60.mps.web.build/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/de.q60.mps.web.build/de.q60.mps.web.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/de.q60.mps.web.build-models" prefix="module/models" />
    </jar>
    <zip destfile="${build.layout}/de.q60.mps.web.zip">
      <fileset dir="${build.tmp}/default/de.q60.mps.web.zip" />
    </zip>
    <echo file="${build.layout}/build.properties">mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.mps.build.counter}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}${line.separator}de.itemis.mps.extensions.versionNumber=${de.itemis.mps.extensions.versionNumber}</echo>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.de.q60.mps.web.build" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate strictMode="true" parallelMode="true" parallelThreads="8" useInplaceTransform="false" hideWarnings="false" createStaticRefs="true" fork="true" skipUnmodifiedModels="${mps.generator.skipUnmodifiedModels}">
      <plugin path="${artifacts.de.itemis.mps.extensions}/de.slisson.mps.all" />
      <plugin path="${artifacts.mps}/plugins/mps-build" />
      <plugin path="${artifacts.mps}/plugins/mps-core" />
      <library file="${artifacts.de.itemis.mps.extensions}/de.slisson.mps.all/languages/de.slisson.mps.all/de.itemis.mps.extensions.build.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.javadoc.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk8.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguageInternal.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.baseLanguage.lightweightdsl.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.actions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.behavior.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.checkedName.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.dataFlow.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.editor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.findUsages.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.generationContext.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.intentions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.modelapi.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.plugin.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.project.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.quotation.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.refactoring.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.resources.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.script.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.query.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.textGen.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.refactoring.participant.jar" />
      <library file="${artifacts.mps}/languages/text/jetbrains.mps.lang.text.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.lang.makeup.jar" />
      <library file="${artifacts.mps}/languages/xml/jetbrains.mps.core.xml.jar" />
      <library file="${artifacts.mps}/lib/mps-behavior-api.jar" />
      <library file="${artifacts.mps}/lib/mps-closures.jar" />
      <library file="${artifacts.mps}/lib/mps-collections.jar" />
      <library file="${artifacts.mps}/lib/mps-core.jar" />
      <library file="${artifacts.mps}/lib/mps-editor.jar" />
      <library file="${artifacts.mps}/lib/mps-environment.jar" />
      <library file="${artifacts.mps}/lib/mps-openapi.jar" />
      <library file="${artifacts.mps}/lib/mps-platform.jar" />
      <library file="${artifacts.mps}/lib/mps-references.jar" />
      <library file="${artifacts.mps}/lib/mps-tuples.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.mps.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.workflow.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.workflow.preset.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.ide.build.jar" />
      <chunk>
        <module file="${basedir}/de.q60.mps.web.build/de.q60.mps.web.build.msd" />
      </chunk>
      <jvmargs>
        <arg value="-ea" />
        <arg value="-Xmx512m" />
      </jvmargs>
      <macro name="mps.home" path="${mps.home}" />
      <macro name="artifacts.root" path="${artifacts.root}" />
      <macro name="extensions.artifacts" path="${extensions.artifacts}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks">
    <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  </target>
  
  <target name="makeDependents" />
  
  <target name="java.compile.de.q60.mps.web.build">
    <mkdir dir="${basedir}/de.q60.mps.web.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/de.q60.mps.web.build" />
    <javac destdir="${build.tmp}/java/out/de.q60.mps.web.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/de.q60.mps.web.build/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.de.itemis.mps.extensions}/de.slisson.mps.all/languages/de.slisson.mps.all/de.itemis.mps.extensions.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="cleanSources">
    <delete dir="${basedir}/de.q60.mps.web.build/source_gen" />
  </target>
</project>