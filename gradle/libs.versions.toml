## Generated by $ ./gradlew refreshVersionsCatalog

[versions]
kotlin = "1.8.22"
modelix-core = "2.10.8"

# MPS - specific for each MPS version/branch
mpsbase = "2020.3.6"
mpsbase-major = "2020.3"
mpsbase-minor = "6"
mpsbase-extensions = "2020.3.2567.a1f3875"

# jersey related
lib-jersey = "2.29.1"
lib-jakarta-xml = "2.3.2"
lib-jakarta-activation = "1.2.1"

[plugins]

kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }


[libraries]

mps = { group = "com.jetbrains", name = "mps", version.ref = "mpsbase" }
mps-extensions = { group = "de.itemis.mps", name = "extensions", version.ref = "mpsbase-extensions" }
#itemis-mps-gradle-plugin = { group = "de.itemis.mps", name="mps-gradle-plugin", version.ref = "mpsGradlePlugin" }

ant-junit = { group = "org.apache.ant", name = "ant-junit", version = "1.10.1" }
jdom = { group = "org.jdom", name = "jdom", version = "2.0.2" }
jersey-inject = { group = "org.glassfish.jersey.inject", name = "jersey-hk2", version.ref = "lib-jersey" }
jersey-media = { group = "org.glassfish.jersey.media", name = "jersey-media-sse", version.ref = "lib-jersey" }
jakarta-xml-bind = { group = "jakarta.xml.bind", name = "jakarta.xml.bind-api", version.ref = "lib-jakarta-xml" }
jakarta-activation = { group = "com.sun.activation", name = "jakarta.activation", version.ref = "lib-jakarta-activation" }

# modelix
modelix-modelserverincldependencies = { group = "org.modelix", name = "model-server-with-dependencies", version.ref = "modelix.core" }
modelix-model-api = { group = "org.modelix", name = "model-api", version.ref = "modelix.core" }
modelix-model-server-api = { group = "org.modelix", name = "model-server-api", version.ref = "modelix.core" }
modelix-model-client = { group = "org.modelix", name = "model-client", version.ref = "modelix.core" }
modelix-model-server-lib = { group = "org.modelix", name = "model-server-lib", version.ref = "modelix.core" }
modelix-light-model-client = { group = "org.modelix", name = "light-model-client", version.ref = "modelix.core" }


## modelix-syncPlugin = { group = "org.modelix.mps", name = "model-server-sync-plugin", version.ref = "mpsModelServerSyncPlugin" }
## modelix-model-api = { group = "org.modelix", name = "model-api", version.ref = "modelixCore" }
## modelix-model-api-gen-runtime = { group = "org.modelix", name = "model-api-gen-runtime", version.ref = "modelixCore" }



# [bundles]
#
# ignite = ["ignite-core", "ignite-spring", "ignite-indexing"]
# apache-cxf = ["apache-cxf-client", "apache-cxf-sse"]
#
# [plugins]
#
# gitVersion = { id = "com.palantir.git-version", version = "3.0.0" }
# ktlint = { id = "org.jlleitschuh.gradle.ktlint", version = "11.4.0" }
# spotless = { id = "com.diffplug.spotless", version = "6.18.0" }
# tasktree = { id = "com.dorongold.task-tree", version = "2.1.1" }
# modelix-mps-buildtools = { id = "org.modelix.mps.build-tools", version = "1.1.0" }
# dokka = {id = "org.jetbrains.dokka", version = "1.8.20"}
#
# [versions]
# kotlin = "1.8.22"
# kotlinCoroutines="1.7.2"
# ktor="2.3.2"
# kotlinHtml="0.8.0"
# kotlinSerialization="1.5.1"
# ignite="2.15.0"
# apacheCxf="3.5.5"
#
# [libraries]
#
# kotlin-stdlib-common = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-common", version.ref = "kotlin" }
# kotlin-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinSerialization" }
# kotlin-serialization-yaml = { group = "com.charleskorn.kaml", name = "kaml", version = "0.54.0" }
# kotlin-logging = { group = "io.github.microutils", name = "kotlin-logging", version = "3.0.5" }
# kotlin-collections-immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version = "0.3.5" }
# kotlin-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version = "0.4.0" }
#
# kotlin-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
# kotlin-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinCoroutines" }
# kotlin-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinCoroutines" }
#
# ktor-server-auth = { group = "io.ktor", name = "ktor-server-auth", version.ref = "ktor" }
# ktor-server-auth-jwt = { group = "io.ktor", name = "ktor-server-auth-jwt", version.ref = "ktor" }
# ktor-server-core = { group = "io.ktor", name = "ktor-server-core", version.ref = "ktor" }
# ktor-server-cors = { group = "io.ktor", name = "ktor-server-cors", version.ref = "ktor" }
# ktor-server-forwarded-header = { group = "io.ktor", name = "ktor-server-forwarded-header", version.ref = "ktor" }
# ktor-server-content-negotiation = { group = "io.ktor", name = "ktor-server-content-negotiation", version.ref = "ktor" }
# ktor-server-html-builder = { group = "io.ktor", name = "ktor-server-html-builder", version.ref = "ktor" }
# ktor-server-netty = { group = "io.ktor", name = "ktor-server-netty", version.ref = "ktor" }
# ktor-server-sessions = { group = "io.ktor", name = "ktor-server-sessions", version.ref = "ktor" }
# ktor-server-status-pages = { group = "io.ktor", name = "ktor-server-status-pages", version.ref = "ktor" }
# ktor-server-test-host = { group = "io.ktor", name = "ktor-server-test-host", version.ref = "ktor" }
# ktor-server-websockets = { group = "io.ktor", name = "ktor-server-websockets", version.ref = "ktor" }
#
# ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
# ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
# ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
# ktor-client-websockets = { group = "io.ktor", name = "ktor-client-websockets", version.ref = "ktor" }
# ktor-client-js = { group = "io.ktor", name = "ktor-client-js", version.ref = "ktor" }
# ktor-client-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
#
# ktor-serialization-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
#
# keycloak-authz-client = { group = "org.keycloak", name = "keycloak-authz-client", version = "22.0.1" }
# guava = { group = "com.google.guava", name = "guava", version = "32.1.1-jre" }
# modelix-incremental = { group = "org.modelix", name = "incremental", version = "0.1.4" }
# kotlinpoet = { group = "com.squareup", name = "kotlinpoet", version = "1.13.1" }
# vavr = { group = "io.vavr", name = "vavr", version = "0.10.4" }
# apache-commons-lang = { group = "org.apache.commons", name = "commons-lang3", version = "3.12.0" }
# apache-commons-io = { group = "commons-io", name = "commons-io", version = "2.13.0" }
# apache-commons-collections = { group = "org.apache.commons", name = "commons-collections4", version = "4.4" }
# trove4j = { group = "net.sf.trove4j", name = "trove4j", version = "3.0.3" }
#
# ignite-core = { group = "org.apache.ignite", name = "ignite-core", version.ref = "ignite" }
# ignite-spring = { group = "org.apache.ignite", name = "ignite-spring", version.ref = "ignite" }
# ignite-indexing = { group = "org.apache.ignite", name = "ignite-indexing", version.ref = "ignite" }
#
# logback-classic = { group = "ch.qos.logback", name = "logback-classic", version = "1.4.8" }
# postgresql = { group = "org.postgresql", name = "postgresql", version = "42.6.0" }
# jcommander = { group = "com.beust", name = "jcommander", version = "1.82" }
# cucumber-java = { group = "io.cucumber", name = "cucumber-java", version = "7.13.0" }

#
# apache-cxf-sse = { group = "org.apache.cxf", name = "cxf-rt-rs-sse", version.ref = "apacheCxf" }
# apache-cxf-client = { group = "org.apache.cxf", name = "cxf-rt-rs-client", version.ref = "apacheCxf" }
#
# semver = { group = "org.semver", name = "api", version = "0.9.33"}
# dokka-versioning = { group = "org.jetbrains.dokka", name = "versioning-plugin", version = "1.8.20"}
